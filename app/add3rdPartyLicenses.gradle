import groovy.json.JsonSlurper

task add3rdPartyLicenses {
    final String UTF_8 = "UTF-8"
    final byte[] LINE_SEPARATOR = System.getProperty("line.separator").getBytes(UTF_8)

    project.android.applicationVariants.all { variant ->

        project.tasks.findByName("${variant.name}OssLicensesTask").doLast {

            def baseDir = new File(project.buildDir, "generated/third_party_licenses/${variant.name}")
            def resourceBaseDir = new File(baseDir, "/res")
            def rawResourceDir = new File(resourceBaseDir, "/raw")
            def licensesFile = new File(rawResourceDir, "third_party_licenses")
            def licensesMetadataFile = new File(rawResourceDir, "third_party_license_metadata")

            // e.g. Add licenses from license.json file under the project root directory.
            def myLicensesFile = new File(project.rootDir, "licenses.json")
            if(myLicensesFile.exists()) {
                def json = new JsonSlurper().parseText(myLicensesFile.text)
                (json as List<LinkedHashMap<String, String>>).each {
                    def start = licensesFile.length()
                    licensesFile << it.license
                    licensesFile << (LINE_SEPARATOR)

                    licensesMetadataFile << ("${start}:${it.license.length()} ${it.libName}")
                    licensesMetadataFile << (LINE_SEPARATOR)
                }
            }

//            // Or hard-coded licenses programmatically
//            [
//                    [libName: '1-My library', license: 'https://www.apache.org/licenses/LICENSE-2.0'],
//                    [libName: '2-My library', license: 'This is my library 2 license text.'],
//            ].each {
//                def start = licensesFile.length()
//
//                licensesFile << it.license
//                licensesFile << (LINE_SEPARATOR)
//
//                licensesMetadataFile << ("${start}:${it.license.length()} ${it.libName}")
//                licensesMetadataFile << (LINE_SEPARATOR)
//            }
        }
    }
}
